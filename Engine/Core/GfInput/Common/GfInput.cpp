////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2019/04/16
//	File: 	GfInput.cpp
//
//	Copyright (c) 2018 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
// Includes

#include "GfInput/Common/GfInput.h"

////////////////////////////////////////////////////////////////////////////////

GfMouse* GfInput::ms_pActiveMouse = nullptr;
GfKeyboard* GfInput::ms_pActiveKeyboard = nullptr;

////////////////////////////////////////////////////////////////////////////////

void GfInput::Init()
{
	if (GfInput_Platform::IsMousePresent()) 
	{
		ms_pActiveMouse = GfInputAlloc::New<GfMouse>();
	}
	if (GfInput_Platform::IsKeyBoardPresent()) 
	{
		ms_pActiveKeyboard = GfInputAlloc::New<GfKeyboard>();
	}
		
}

////////////////////////////////////////////////////////////////////////////////

void GfInput::Shutdown()
{
	if (ms_pActiveMouse) 
	{
		GfInputAlloc::Delete<GfMouse>(ms_pActiveMouse);
		ms_pActiveMouse = nullptr;
	}
	if (ms_pActiveKeyboard) 
	{
		GfInputAlloc::Delete<GfKeyboard>(ms_pActiveKeyboard);
	}
}

////////////////////////////////////////////////////////////////////////////////

void GfInput::Update()
{
	if (ms_pActiveMouse)
	{
		ms_pActiveMouse->Update();
	}
	if (ms_pActiveKeyboard) 
	{
		ms_pActiveKeyboard->Update();
	}
}

////////////////////////////////////////////////////////////////////////////////

bool GfInput::IsMouseAvailable()
{
	return ms_pActiveMouse != nullptr;
}

////////////////////////////////////////////////////////////////////////////////

bool GfInput::IsKeyboardAvailable()
{
	return ms_pActiveKeyboard != nullptr;
}

////////////////////////////////////////////////////////////////////////////////

GfMouse* GfInput::GetMousePtr()
{
	return ms_pActiveMouse;
}

////////////////////////////////////////////////////////////////////////////////

GfKeyboard* GfInput::GetKeyboardPtr()
{
	return ms_pActiveKeyboard;
}

////////////////////////////////////////////////////////////////////////////////
// EOF