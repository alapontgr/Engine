#ifdef DEAD
////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2019/02/06
//	File: 	GfGraphicResources.cpp
//
//	Copyright (c) 2018 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
// Includes

#include "GfRender/Common/GfGraphicResources.h"

////////////////////////////////////////////////////////////////////////////////

GfGraphicsResource::GfGraphicsResource()
	: m_eType(EParamaterSlotType::Invalid)
{
}

////////////////////////////////////////////////////////////////////////////////

GfGraphicsResource::GfGraphicsResource(EParamaterSlotType::Type eType)
	: m_eType(eType)
{
}

////////////////////////////////////////////////////////////////////////////////

GfConstantBuffer::GfConstantBuffer()
	: GfGraphicsResource(EParamaterSlotType::UniformBuffer)
{
}

////////////////////////////////////////////////////////////////////////////////

void GfConstantBuffer::BindBuffer(const GfBuffer::GfRange& kRange)
{
	if (m_uiFlags.IsEnable(EFlags.BufferBound)) 
	{
		GF_ASSERT_ALWAYS("Implement me!!!");
	}
	m_kBufferRange = kRange;
	m_uiFlags |= (EFlags::BufferBound | EFlags::GPUDirty);

}

////////////////////////////////////////////////////////////////////////////////

void GfConstantBuffer::Init(const GfRenderContext& kCtxt)
{
	GF_ASSERT_ALWAYS("Implement me!!!");
}

////////////////////////////////////////////////////////////////////////////////
// EOF
#endif // DEAD