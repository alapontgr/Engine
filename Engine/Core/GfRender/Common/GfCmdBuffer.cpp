////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2018/09/16
//	File: 	GFCMDBUFFER.cpp
//
//	Copyright (c) 2018 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
// Includes

#include "GfRender/Common/GfCmdBuffer.h"

////////////////////////////////////////////////////////////////////////////////

GfCmdBuffer::GfCmdBuffer()
	: m_eType(GfCmdBufferType::Invalid)
{
}

////////////////////////////////////////////////////////////////////////////////

void GfCmdBuffer::Init(GfCmdBufferType::Type eType)
{
	GF_ASSERT(m_eType == GfCmdBufferType::Invalid, "Cmd buffer already initialised");
	m_eType = eType;
}

////////////////////////////////////////////////////////////////////////////////

void GfCmdBuffer::BeginRecording(const GfRenderContext& kCtx)
{
	BeginRecordingPlatform(kCtx);
}

////////////////////////////////////////////////////////////////////////////////

void GfCmdBuffer::EndRecording(const GfRenderContext& kCtx)
{
	EndRecordingPlatform(kCtx);
}

////////////////////////////////////////////////////////////////////////////////

void GfCmdBuffer::BeginRenderPass(const GfRenderContext& kCtx, const GfRenderPass& kRenderPass)
{
	BeginRenderPassPlatform(kCtx, kRenderPass);
}

////////////////////////////////////////////////////////////////////////////////

void GfCmdBuffer::EndRenderPass(const GfRenderContext& kCtx, const GfRenderPass& kRenderPass)
{
	EndRenderPassPlatform(kCtx, kRenderPass);
}

////////////////////////////////////////////////////////////////////////////////
// EOF