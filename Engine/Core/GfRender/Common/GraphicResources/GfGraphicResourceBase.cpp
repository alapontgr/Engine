////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2019/02/06
//	File: 	GfGraphicResourceBase.cpp
//
//	Copyright (c) 2018 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
// Includes

#include "GfRender/Common/GraphicResources/GfGraphicResourceBase.h"

////////////////////////////////////////////////////////////////////////////////

GfGraphicsResourceBase::GfGraphicsResourceBase()
	: m_eResourceType(EParamaterSlotType::Invalid)
{
}

////////////////////////////////////////////////////////////////////////////////

void GfGraphicsResourceBase::MarkAsDestroyed()
{
	m_uiGraphicResFlags.Disable(EGraphicResFlags::Initialised | EGraphicResFlags::GPUReady);
}

////////////////////////////////////////////////////////////////////////////////

void GfGraphicsResourceBase::MarkAsGPUReady()
{
	m_uiGraphicResFlags.Enable(EGraphicResFlags::GPUReady);
}

////////////////////////////////////////////////////////////////////////////////

GfBufferedResource::GfBufferedResource()
{
	m_uiGraphicResFlags.Enable(EGraphicResFlags::BufferedResource);
}

////////////////////////////////////////////////////////////////////////////////

void GfBufferedResource::BindBuffer(const GfBuffer::GfRange& kRange)
{
	if (!m_uiGraphicResFlags.IsEnable(EBUfferedResFlags::BufferBound))
	{
		m_kBufferRange = kRange;
		m_uiGraphicResFlags |= (EBUfferedResFlags::BufferBound);
	}
}

////////////////////////////////////////////////////////////////////////////////

GfTexturedResource::GfTexturedResource()
{
	m_uiGraphicResFlags.Enable(EGraphicResFlags::TexturedResource);
}

////////////////////////////////////////////////////////////////////////////////
// EOF
