////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2018/10/14
//	File: 	GfMemoryShared.h
//
//	Copyright (c) 2018 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
#ifndef __GFMEMORYSHARED_H__
#define __GFMEMORYSHARED_H__
////////////////////////////////////////////////////////////////////////////////
// Includes

#include "GfCore/Common/GfCoreMinimal.h"

////////////////////////////////////////////////////////////////////////////////

template <typename T>
GF_FORCEINLINE T* GfAlign(T* pBase, u32 uiAlign = 16)
{
	u64 ulBase((u64)pBase);
	u64 ulOffset = ulBase & (uiAlign - 1);
	return reinterpret_cast<T*>(ulBase + (ulOffset != 0 ? (uiAlign - ulOffset) : 0));
}

////////////////////////////////////////////////////////////////////////////////

template <typename T>
inline bool GfIsAligned(const T* pData, u32 uiAlign = 16)
{
	return (reinterpret_cast<u64>(pData) & (uiAlign - 1)) == 0;
}

////////////////////////////////////////////////////////////////////////////////

class GfMemory 
{
public:

	static void* Alloc(size_t uiSize, size_t uiAlign = 16);

	static void Free(void* pAddr);
};

////////////////////////////////////////////////////////////////////////////////

#include GF_SOLVE_PLATFORM_INLINE(GfMemoryShared)

////////////////////////////////////////////////////////////////////////////////
#endif // __GFMEMORYSHARED_H__