////////////////////////////////////////////////////////////////////////////////
//
//	Author: Sergio Alapont Granero (seralgrainf@gmail.com)
//	Date: 	2020/01/10
//	File: 	GfHash.h
//
//	Copyright (c) 2020 (See README.md)
//
////////////////////////////////////////////////////////////////////////////////
#pragma once 
#include "Common/GfCore/GfCoreMinimal.h"

////////////////////////////////////////////////////////////////////////////////

class GfHash 
{
public:

	//MurmurHash2

	// 64-bit version
	static u64 compute(const void* buffer, u64 size, u64 seed = 123);
	static u64 compute(const GfString& str, u64 seed = 123);
};

template <typename T>
class GfHashable 
{
public:
	u64 getHash() const { return GfHash::compute(this, sizeof(T)); }
};

////////////////////////////////////////////////////////////////////////////////
